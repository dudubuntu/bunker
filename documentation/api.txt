-----------API------------

с 2** статусами приходит обычно json вида {"message": "какое-то сообщение об успехе"}
c 4** статусами приходит json вида {"error": {"message": "какая ошибка", "extra": []}}      #extra приходит не везде, обычно там недостающие в запросе поля

Главная
    room_connect {"room_id": "", "password": "", "username": ""}    200 или 403

Комната
    room_fill_players {"room_id": ""}       Работает только для комнат в статусе waiting и наполняет комнату до максимума
    room_create {"initiator": "", "password": "", "quantity_players": "", "location": ""}       Response {"message": "Successfully created", "room_id": 12345}
    room_delete {"room_id": ""}    200 или 400
    room_info {"room_id": ""}      response {"id": "", "initiator": "", "state": "waiting", "connected": [{"username": "", "state": ""}, ]}
    player_change_username {"room_id": "", "new_nickname": ""}     200 или 400
    player_kick {"room_id": "", "aim_nickname": ""}     200, 400,403, 500
    player_ready {"room_id": ""}        200 или 400
    ***
        game_start {"room_id": ""}       200
        game_info {"room_id": ""}   response {"id": 1000, "initiator": "", "state": "opening", "lap": 1, "turn": 1, "opening_quantity": 3, "quantity_players": 4, "players": [{"player_number": 2, "username": "admin", "state": "in_game", "info": {}}]}       # opening_quantity высчитывается на бэке (сколько вскрывать хартик)  |   в info приходят не все хар-ки, а только вскрытые
                lap - текущий круг игры
                turn - текущий номер хода (номер игрока, который должен ходить)
                opening_quantity - количество характеристик, которые необходимо вскрыть
        player_get_current {"room_id": ""}      response {"room_id": 1000, "username": "admin", "info": {"bio": "", "cards": ...}, "opened": "", "card_opened_numbers": "", "state": "in_game", "is_owner": ""}
        player_open_chars {"room_id": "", "open": []}     200 или 400
        player_use_card {"room_id": "", "username": "", "card_number": ""}      200 или 400
        player_make_vote {"room_id": "", "votes": ["username_aim1", ...]}
        game_votes_info {"room_id": ""}     response {"room_id": "", "lap": "", "state": "", "extra": [{"initiator": "", "votes": ["username_aim1", ...]}, {}, ...], "result": {"username": "количество голосов", ...}}       # если state waiting_first_time то extra пустое
        game_results {"room_id": ""}        response {}

    ***

Login
    check_login {"login": "", "password": ""}   response {"message": "You've successfuly logged in"}

signup
    check_login_exists {"login": ""}
    sign_up {"login": "", "password1": "", "password2": ""}

Профиль
    get_user    response {"login": "", "nickname": "", "games_info": {"games_played_number": "", "win_quantity": "", "loss_quantity": "", "last_games": [{"room_id": "", "status": "win/loss"}, ], "active_games": ["room_id", ]}}
    get_configurations      response {"name": "", data: ""}

Поддержка
    send_request {"name": "", "email": "", "text": ""}




Статусы:

    room:
        waiting     -   ожидание других игроков
        opening     -   основная стадия игры: пользователи вскрывают карточки
        voting      -   стадия голосования
        finished    -   игра закончена
    roomuser:
        left        -   пользователь самостоятельно покинул игру
        kicked      -   пользователь кикнут админом
        ready       -   готов к игре (комната в статусе waiting)
        not_ready   -   не готов к игре (комната в статусе waiting)
        in_game     -   в игре (комната в статусе waiting)
        kicked_by_vote      -   кикнут в голосовании
    roomvote:
        waiting_first_time      -   первый этап голосования (если есть результат, то переходит в done, иначе в waiting_second_time)
        waiting_second_time     -   второй этап голосования
        done                    -   голосование закончено